{"version":3,"sources":["component/TopBar.js","component/Uploader.js","App.js","reportWebVitals.js","index.js"],"names":["TopBar","state","visible","showModal","setState","handleDismiss","e","className","title","subTitle","extra","type","onClick","this","onOk","onCancel","cancelButtonProps","hidden","React","Component","Uploader","loading","currentFile","modalVisible","fileArr","handleUpload","selectorFiles","console","log","reader","FileReader","size","message","error","includes","readAsBinaryString","onload","event","success","name","data","target","result","workbook","XLSX","read","SheetNames","forEach","sheet","jsonObject","utils","sheet_to_json","Sheets","file","inputElement","createRef","deleteFile","index","slice","warn","spinning","xs","sm","ref","input","multiple","onChange","files","style","display","footer","width","border","height","color","onDragOver","preventDefault","onDrop","dataTransfer","UploadOutlined","click","map","shape","App","md","bordered","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90689d9e.chunk.js","sourcesContent":["import React from 'react';\nimport { PageHeader, Button, Modal } from 'antd';\nimport './TopBar.css';\n\nclass TopBar extends React.Component {\n  state = { visible: false };\n\n  showModal = () => {\n    this.setState({\n      visible: true\n    });\n  };\n\n  handleDismiss = e => {\n    this.setState({\n      visible: false\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"page-header-wrapper\">\n        <PageHeader\n          className=\"site-page-header\"\n          title={<div className=\"page-header-text\">记录查重</div>}\n          subTitle={<div className=\"page-header-sub-text\">筛除重复Excel记录</div>}\n          extra={[\n            <Button key=\"contact\" type=\"primary\" onClick={this.showModal}>\n              使用指南\n            </Button>\n          ]}\n        />\n        <Modal\n          title={<div className=\"bold-card-title\">使用指南</div>}\n          visible={this.state.visible}\n          onOk={this.handleDismiss}\n          onCancel={this.handleDismiss}\n          cancelButtonProps={{ hidden: true }}>\n          <div className=\"instruction-container\">\n            <p className=\"instruction-title\">第一步：分别上传之前几个月的B类Excel</p>\n            <p className=\"instruction-text\">\n              从左侧的上传区域中上传过去几个月的B类联系记录，最多可以支持五个Excel表。若是传错可以删除。\n            </p>\n            <br />\n            <p className=\"instruction-title\">第二步：上传之目前的C类Excel</p>\n            <p className=\"instruction-text\">\n              从右侧的的上传区域中上传过去现在想查重的C类Excel记录\n            </p>\n            <br />\n            <p className=\"instruction-title\">第三步：点击\"查重\"按钮</p>\n            <p className=\"instruction-text\">\n              点击底部的查重按钮，进行记录查重\n            </p>\n            <br />\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default TopBar;\n","import React from \"react\";\nimport { Spin, Form, Row, Col, Button, message, Divider, Modal } from \"antd\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport XLSX from \"xlsx\";\nimport \"./Uploader.css\";\n\nclass Uploader extends React.Component {\n  state = {\n    loading: false,\n    currentFile: null,\n    modalVisible: false,\n    fileArr: [],\n  };\n\n  handleUpload = (selectorFiles) => {\n    console.log(selectorFiles[0]);\n    const reader = new FileReader();\n    if (selectorFiles[0]) {\n      if (selectorFiles[0].size > 10000000) {\n        message.error(\"图片最大不能超过10MB\");\n      } else if (\n        ![\n          \"application/vnd.ms-excel\",\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        ].includes(selectorFiles[0].type)\n      ) {\n        message.error(\"文件必须是Excel的格式\");\n      } else {\n        reader.readAsBinaryString(selectorFiles[0]);\n        reader.onload = (event) => {\n          message.success(`${selectorFiles[0].name} 文件成功被加入`);\n          const data = event.target.result;\n          const workbook = XLSX.read(data, { type: \"binary\" });\n          workbook.SheetNames.forEach((sheet) => {\n            let jsonObject = XLSX.utils.sheet_to_json(workbook.Sheets[sheet]);\n            console.log({ jsonObject });\n          });\n\n          this.setState({\n            file: selectorFiles[0],\n            fileArr: [...this.state.fileArr, selectorFiles[0]],\n          });\n        };\n      }\n    }\n  };\n\n  inputElement = React.createRef();\n\n  deleteFile = (index) => {\n    this.setState(\n      {\n        fileArr: [\n          ...this.state.fileArr.slice(0, index),\n          ...this.state.fileArr.slice(index + 1),\n        ],\n      },\n      () => {\n        message.warn(\"文件成功被删除\");\n      }\n    );\n  };\n\n  render() {\n    const { fileArr, loading } = this.state;\n\n    return (\n      <div className=\"contact-form-container\">\n        <Spin spinning={loading}>\n          <Form>\n            <Row>\n              <Col xs={24} sm={12} className=\"fields image-section-container\">\n                <input\n                  ref={(input) => (this.inputElement = input)}\n                  type=\"file\"\n                  name=\"user[image]\"\n                  multiple\n                  onChange={(e) => this.handleUpload(e.target.files)}\n                  style={{ display: \"none\" }}\n                />\n                <Modal\n                  title=\"Add a file\"\n                  visible={this.state.modalVisible}\n                  footer={null}\n                  width=\"60%\"\n                  onCancel={() => this.setState({ modalVisible: false })}\n                >\n                  <div\n                    style={{\n                      border: \"1px solid black\",\n                      width: \"100%\",\n                      height: \"300px\",\n                      color: \"black\",\n                    }}\n                  >\n                    <div\n                      onDragOver={(event) => event.preventDefault()}\n                      onDrop={(event) => {\n                        event.preventDefault();\n                        this.handleUpload(event.dataTransfer.files);\n                      }}\n                      className=\"file-drop-content\"\n                    >\n                      <p className=\"upload-drag-icon\">\n                        <UploadOutlined />\n                      </p>\n                      <p>\n                        拖拽上传Excel文件，或者 &nbsp;\n                        <span\n                          onClick={() => {\n                            this.inputElement.click();\n                          }}\n                          className=\"file-upload-browse\"\n                        >\n                          点击选择本地文件\n                        </span>\n                      </p>\n                    </div>\n                  </div>\n                </Modal>\n\n                <div className=\"files-container\">\n                  {fileArr.map((file, index) => (\n                    <div className=\"file-item-container\" key={index}>\n                      <Button\n                        type=\"default\"\n                        className=\"file-item\"\n                        key={`${index}-item`}\n                      >\n                        {file.name}\n                      </Button>\n                      <Button\n                        shape=\"circle\"\n                        type=\"default\"\n                        className=\"delete-button\"\n                        key={`${index}-delete`}\n                        onClick={() => {\n                          this.deleteFile(index);\n                        }}\n                      >\n                        <div>X</div>\n                      </Button>\n                    </div>\n                  ))}\n                </div>\n                <Divider />\n                <Button\n                  type=\"default\"\n                  onClick={() => {\n                    this.setState({ modalVisible: true });\n                  }}\n                  className=\"desktop-upload-button\"\n                >\n                  添加Excel\n                </Button>\n                <Button\n                  type=\"default\"\n                  onClick={() => {\n                    this.inputElement.click();\n                  }}\n                  className=\"mobile-upload-button\"\n                >\n                  添加Excel\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </Spin>\n      </div>\n    );\n  }\n}\n\nexport default Uploader;\n","import { Row, Col, Card } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\nimport TopBar from \"./component/TopBar\";\nimport Uploader from \"./component/Uploader\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <TopBar />\n      <Row>\n        <Col xs={24} md={12}>\n          <Card\n            title={<div className=\"bold-card-title\">B类Excel</div>}\n            bordered={false}\n            className=\"card-container\"\n          >\n            点击或拖拽上传文件\n            <Uploader />\n          </Card>\n        </Col>\n        <Col xs={24} md={12}>\n          <Card\n            title={<div className=\"bold-card-title\">C类Excel</div>}\n            bordered={false}\n            className=\"card-container\"\n          >\n            点击或拖拽上传文件\n            <Uploader />\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}