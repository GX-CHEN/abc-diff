{"version":3,"sources":["component/TopBar.js","component/Uploader.js","App.js","reportWebVitals.js","index.js"],"names":["TopBar","state","visible","showModal","setState","handleDismiss","e","className","title","subTitle","extra","type","onClick","this","onOk","onCancel","cancelButtonProps","hidden","React","Component","Uploader","loading","currentFile","modalVisible","fileNameArr","handleUpload","selectorFiles","reader","FileReader","size","message","error","includes","readAsBinaryString","onload","event","success","name","data","target","result","workbook","XLSX","read","sheetData","SheetNames","forEach","sheet","jsonObject","utils","sheet_to_json","Sheets","header","props","push","addItem","file","inputElement","createRef","deleteFile","index","splice","warn","removeItem","spinning","xs","sm","ref","input","multiple","onChange","files","style","display","footer","width","border","height","color","onDragOver","preventDefault","onDrop","dataTransfer","UploadOutlined","click","map","fileName","shape","App","useState","typeBArray","setTypeBArray","typeCArray","setTypeCArray","md","bordered","item","console","log","newTypeBArray","newTypeCArray","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ea4880a.chunk.js","sourcesContent":["import React from 'react';\nimport { PageHeader, Button, Modal } from 'antd';\nimport './TopBar.css';\n\nclass TopBar extends React.Component {\n  state = { visible: false };\n\n  showModal = () => {\n    this.setState({\n      visible: true\n    });\n  };\n\n  handleDismiss = e => {\n    this.setState({\n      visible: false\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"page-header-wrapper\">\n        <PageHeader\n          className=\"site-page-header\"\n          title={<div className=\"page-header-text\">记录查重</div>}\n          subTitle={<div className=\"page-header-sub-text\">筛除重复Excel记录</div>}\n          extra={[\n            <Button key=\"contact\" type=\"primary\" onClick={this.showModal}>\n              使用指南\n            </Button>\n          ]}\n        />\n        <Modal\n          title={<div className=\"bold-card-title\">使用指南</div>}\n          visible={this.state.visible}\n          onOk={this.handleDismiss}\n          onCancel={this.handleDismiss}\n          cancelButtonProps={{ hidden: true }}>\n          <div className=\"instruction-container\">\n            <p className=\"instruction-title\">第一步：分别上传之前几个月的B类Excel</p>\n            <p className=\"instruction-text\">\n              从左侧的上传区域中上传过去几个月的B类联系记录，最多可以支持五个Excel表。若是传错可以删除。\n            </p>\n            <br />\n            <p className=\"instruction-title\">第二步：上传之目前的C类Excel</p>\n            <p className=\"instruction-text\">\n              从右侧的的上传区域中上传过去现在想查重的C类Excel记录\n            </p>\n            <br />\n            <p className=\"instruction-title\">第三步：点击\"查重\"按钮</p>\n            <p className=\"instruction-text\">\n              点击底部的查重按钮，进行记录查重\n            </p>\n            <br />\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default TopBar;\n","import React from \"react\";\nimport { Spin, Form, Row, Col, Button, message, Divider, Modal } from \"antd\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport XLSX from \"xlsx\";\nimport \"./Uploader.css\";\n\nclass Uploader extends React.Component {\n  state = {\n    loading: false,\n    currentFile: null,\n    modalVisible: false,\n    fileNameArr: [],\n  };\n\n  handleUpload = (selectorFiles) => {\n    const reader = new FileReader();\n    if (selectorFiles[0]) {\n      if (selectorFiles[0].size > 10000000) {\n        message.error(\"文件最大不能超过10MB\");\n      } else if (\n        ![\n          \"application/vnd.ms-excel\",\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        ].includes(selectorFiles[0].type)\n      ) {\n        message.error(\"文件必须是Excel的格式\");\n      } else {\n        reader.readAsBinaryString(selectorFiles[0]);\n        reader.onload = (event) => {\n          message.success(`${selectorFiles[0].name} 文件成功被加入`);\n          const data = event.target.result;\n          const workbook = XLSX.read(data, { type: \"binary\" });\n          const sheetData = [];\n          workbook.SheetNames.forEach((sheet) => {\n            let jsonObject = XLSX.utils.sheet_to_json(workbook.Sheets[sheet], {\n              header: this.props.header,\n            });\n            sheetData.push(...jsonObject);\n          });\n          this.props.addItem(sheetData);\n\n          this.setState({\n            file: selectorFiles[0],\n            fileNameArr: [...this.state.fileNameArr, selectorFiles[0].name],\n          });\n        };\n      }\n    }\n  };\n\n  inputElement = React.createRef();\n\n  deleteFile = (index) => {\n    const { fileNameArr } = this.state;\n    fileNameArr.splice(index, 1);\n    this.setState(\n      {\n        fileNameArr,\n      },\n      () => {\n        message.warn(\"文件成功被删除\");\n      }\n    );\n    this.props.removeItem(index);\n  };\n\n  render() {\n    const { fileNameArr, loading } = this.state;\n\n    return (\n      <div className=\"contact-form-container\">\n        <Spin spinning={loading}>\n          <Form>\n            <Row>\n              <Col xs={24} sm={12} className=\"fields image-section-container\">\n                <input\n                  ref={(input) => (this.inputElement = input)}\n                  type=\"file\"\n                  name=\"user[image]\"\n                  multiple\n                  onChange={(e) => this.handleUpload(e.target.files)}\n                  style={{ display: \"none\" }}\n                />\n                <Modal\n                  title=\"Add a file\"\n                  visible={this.state.modalVisible}\n                  footer={null}\n                  width=\"60%\"\n                  onCancel={() => this.setState({ modalVisible: false })}\n                >\n                  <div\n                    style={{\n                      border: \"1px solid black\",\n                      width: \"100%\",\n                      height: \"300px\",\n                      color: \"black\",\n                    }}\n                  >\n                    <div\n                      onDragOver={(event) => event.preventDefault()}\n                      onDrop={(event) => {\n                        event.preventDefault();\n                        this.handleUpload(event.dataTransfer.files);\n                      }}\n                      className=\"file-drop-content\"\n                    >\n                      <p className=\"upload-drag-icon\">\n                        <UploadOutlined />\n                      </p>\n                      <p>\n                        拖拽上传Excel文件，或者 &nbsp;\n                        <span\n                          onClick={() => {\n                            this.inputElement.click();\n                          }}\n                          className=\"file-upload-browse\"\n                        >\n                          点击选择本地文件\n                        </span>\n                      </p>\n                    </div>\n                  </div>\n                </Modal>\n\n                <div className=\"files-container\">\n                  {fileNameArr.map((fileName, index) => (\n                    <div className=\"file-item-container\" key={index}>\n                      <Button\n                        type=\"default\"\n                        className=\"file-item\"\n                        key={`${index}-item`}\n                      >\n                        {fileName}\n                      </Button>\n                      <Button\n                        shape=\"circle\"\n                        type=\"default\"\n                        className=\"delete-button\"\n                        key={`${index}-delete`}\n                        onClick={() => {\n                          this.deleteFile(index);\n                        }}\n                      >\n                        <div>X</div>\n                      </Button>\n                    </div>\n                  ))}\n                </div>\n                <Divider />\n                <Button\n                  type=\"default\"\n                  onClick={() => {\n                    this.setState({ modalVisible: true });\n                  }}\n                  className=\"desktop-upload-button\"\n                >\n                  添加Excel\n                </Button>\n                <Button\n                  type=\"default\"\n                  onClick={() => {\n                    this.inputElement.click();\n                  }}\n                  className=\"mobile-upload-button\"\n                >\n                  添加Excel\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </Spin>\n      </div>\n    );\n  }\n}\n\nexport default Uploader;\n","import { Row, Col, Card } from \"antd\";\nimport { useState } from \"react\";\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\nimport TopBar from \"./component/TopBar\";\nimport Uploader from \"./component/Uploader\";\n\nfunction App() {\n  const typeBHeader = [\n    \"序号\",\n    \"时间\",\n    \"ID\",\n    \"姓名\",\n    \"性别\",\n    \"年龄\",\n    \"单位\",\n    \"联系方式\",\n    \"发现科室\",\n    \"阳性体征\",\n    \"家族史/既往史\",\n    \"通知时间\",\n    \"通知人员\",\n  ];\n\n  const typeCHeader = [\n    \"序号\",\n    \"ID\",\n    \"姓名\",\n    \"性别\",\n    \"年龄\",\n    \"身份证号\",\n    \"联系方式\",\n    \"单位\",\n    \"部门\",\n    \"复诊主题\",\n    \"复诊描述\",\n    \"通知时间\",\n    \"通知人员\",\n  ];\n\n  const [typeBArray, setTypeBArray] = useState([]);\n  const [typeCArray, setTypeCArray] = useState([]);\n\n  const addTypeBItem = (item) => {\n    setTypeBArray([...typeBArray, item]);\n    console.log(typeBArray);\n  };\n\n  const addTypeCItem = (item) => {\n    setTypeCArray([...typeCArray, item]);\n  };\n\n  const removeTypeBItem = (index) => {\n    console.log(typeBArray);\n    const newTypeBArray = [...typeBArray];\n    typeBArray.splice(index, 1);\n    setTypeBArray(newTypeBArray);\n    console.log({ index, typeBArray });\n  };\n\n  const removeTypeCItem = (index) => {\n    const newTypeCArray = [...typeCArray];\n    typeCArray.splice(index, 1);\n    setTypeCArray(newTypeCArray);\n  };\n\n  return (\n    <div className=\"app\">\n      <TopBar />\n      <Row>\n        <Col xs={24} md={12}>\n          <Card\n            title={<div className=\"bold-card-title\">B类Excel</div>}\n            bordered={false}\n            className=\"card-container\"\n          >\n            点击或拖拽上传文件\n            <Uploader\n              addItem={addTypeBItem}\n              removeItem={removeTypeBItem}\n              header={typeBHeader}\n            />\n          </Card>\n        </Col>\n        <Col xs={24} md={12}>\n          <Card\n            title={<div className=\"bold-card-title\">C类Excel</div>}\n            bordered={false}\n            className=\"card-container\"\n          >\n            点击或拖拽上传文件\n            <Uploader\n              addItem={addTypeCItem}\n              removeItem={removeTypeCItem}\n              header={typeCHeader}\n            />\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}