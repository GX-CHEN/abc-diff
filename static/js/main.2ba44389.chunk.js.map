{"version":3,"sources":["component/TopBar.js","component/Uploader.js","constants.js","App.js","reportWebVitals.js","index.js"],"names":["TopBar","state","visible","showModal","setState","handleDismiss","e","className","title","subTitle","extra","type","onClick","this","onOk","onCancel","cancelButtonProps","hidden","React","Component","Uploader","loading","currentFile","modalVisible","fileNameArr","handleUpload","selectorFiles","reader","FileReader","size","message","error","includes","name","length","props","maxItem","readAsBinaryString","onload","event","success","data","target","result","workbook","XLSX","read","sheetData","SheetNames","forEach","sheet","jsonObject","utils","sheet_to_json","Sheets","header","push","addItem","file","inputElement","createRef","deleteFile","index","splice","warn","removeItem","spinning","xs","sm","ref","input","multiple","onChange","files","style","display","footer","width","border","height","color","onDragOver","preventDefault","onDrop","dataTransfer","click","UploadOutlined","map","fileName","shape","typeBHeader","typeCHeader","typeCHeaderValue","序号","ID","姓名","性别","年龄","身份证号","联系方式","单位","部门","复诊主题","复诊描述","通知时间","通知人员","columns","dataIndex","key","App","useState","typeBArray","setTypeBArray","typeCArray","setTypeCArray","duplicate","setDuplicate","nonDuplicate","setNonDuplicate","md","bordered","item","newTypeBArray","newTypeCArray","allTypeBItems","allTypeCItems","allTypeBIds","String","duplicateC","filter","cItem","nonDuplicateC","dataSource","ws","json_to_sheet","wb","book_new","book_append_sheet","writeFile","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ba44389.chunk.js","sourcesContent":["import React from \"react\";\nimport { PageHeader, Button, Modal } from \"antd\";\nimport \"./TopBar.css\";\n\nclass TopBar extends React.Component {\n  state = { visible: false };\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  handleDismiss = (e) => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"page-header-wrapper\">\n        <PageHeader\n          className=\"site-page-header\"\n          title={<div className=\"page-header-text\">记录查重</div>}\n          subTitle={\n            <div className=\"page-header-sub-text\">筛除重复Excel记录</div>\n          }\n          extra={[\n            <Button key=\"contact\" type=\"primary\" onClick={this.showModal}>\n              使用指南\n            </Button>,\n          ]}\n        />\n        <Modal\n          title={<div className=\"bold-card-title\">使用指南</div>}\n          visible={this.state.visible}\n          onOk={this.handleDismiss}\n          onCancel={this.handleDismiss}\n          cancelButtonProps={{ hidden: true }}\n        >\n          <div className=\"instruction-container\">\n            <p className=\"instruction-title\">\n              第一步：分别上传之前几个月的B类Excel\n            </p>\n            <p className=\"instruction-text\">\n              从左侧的上传区域中上传过去几个月的B类联系记录，最多可以支持五个Excel表。若是传错可以删除。\n            </p>\n            <br />\n            <p className=\"instruction-title\">第二步：上传之目前的C类Excel</p>\n            <p className=\"instruction-text\">\n              从右侧的的上传区域中上传过去现在想查重的C类Excel记录，最多支持上传一个。若是传错可以删除。\n            </p>\n            <br />\n            <p className=\"instruction-title\">第三步：点击\"查重\"按钮</p>\n            <p className=\"instruction-text\">点击底部的查重按钮，进行记录查重</p>\n            <br />\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default TopBar;\n","import React from \"react\";\nimport { Spin, Form, Row, Col, Button, message, Divider, Modal } from \"antd\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport XLSX from \"xlsx\";\nimport \"./Uploader.css\";\n\nclass Uploader extends React.Component {\n  state = {\n    loading: false,\n    currentFile: null,\n    modalVisible: false,\n    fileNameArr: [],\n  };\n\n  handleUpload = (selectorFiles) => {\n    const reader = new FileReader();\n    if (selectorFiles[0]) {\n      if (selectorFiles[0].size > 5000000) {\n        message.error(\"文件最大不能超过5MB\");\n      } else if (\n        ![\n          \"application/vnd.ms-excel\",\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        ].includes(selectorFiles[0].type) &&\n        !selectorFiles[0].name.includes(\".xls\")\n      ) {\n        message.error(\"文件必须是Excel的格式\");\n      } else if (this.state.fileNameArr.length >= this.props.maxItem) {\n        message.error(`最大上传文件数限制为 ${this.props.maxItem}`);\n      } else {\n        reader.readAsBinaryString(selectorFiles[0]);\n        reader.onload = (event) => {\n          message.success(`${selectorFiles[0].name} 文件成功被加入`);\n          const data = event.target.result;\n          const workbook = XLSX.read(data, { type: \"binary\" });\n          const sheetData = [];\n          workbook.SheetNames.forEach((sheet) => {\n            let jsonObject = XLSX.utils.sheet_to_json(workbook.Sheets[sheet], {\n              header: this.props.header,\n            });\n            sheetData.push(...jsonObject);\n          });\n          this.props.addItem(sheetData);\n\n          this.setState({\n            file: selectorFiles[0],\n            fileNameArr: [...this.state.fileNameArr, selectorFiles[0].name],\n          });\n        };\n      }\n    }\n  };\n\n  inputElement = React.createRef();\n\n  deleteFile = (index) => {\n    const { fileNameArr } = this.state;\n    fileNameArr.splice(index, 1);\n    this.setState(\n      {\n        fileNameArr,\n      },\n      () => {\n        message.warn(\"文件成功被删除\");\n      }\n    );\n    this.props.removeItem(index);\n  };\n\n  render() {\n    const { fileNameArr, loading } = this.state;\n\n    return (\n      <div className=\"contact-form-container\">\n        <Spin spinning={loading}>\n          <Form>\n            <Row>\n              <Col xs={24} sm={12} className=\"fields image-section-container\">\n                <input\n                  ref={(input) => (this.inputElement = input)}\n                  type=\"file\"\n                  name=\"user[image]\"\n                  multiple\n                  onChange={(e) => this.handleUpload(e.target.files)}\n                  style={{ display: \"none\" }}\n                />\n                <Modal\n                  title=\"Add a file\"\n                  visible={this.state.modalVisible}\n                  footer={null}\n                  width=\"60%\"\n                  onCancel={() => this.setState({ modalVisible: false })}\n                >\n                  <div\n                    style={{\n                      border: \"1px solid black\",\n                      width: \"100%\",\n                      height: \"300px\",\n                      color: \"black\",\n                    }}\n                  >\n                    <div\n                      onDragOver={(event) => event.preventDefault()}\n                      onDrop={(event) => {\n                        event.preventDefault();\n                        this.handleUpload(event.dataTransfer.files);\n                      }}\n                      className=\"file-drop-content\"\n                    >\n                      <p\n                        className=\"upload-drag-icon\"\n                        onClick={() => {\n                          this.inputElement.click();\n                        }}\n                      >\n                        <UploadOutlined />\n                      </p>\n                      <p>\n                        拖拽上传Excel文件，或者 &nbsp;\n                        <span\n                          onClick={() => {\n                            this.inputElement.click();\n                          }}\n                          className=\"file-upload-browse\"\n                        >\n                          点击选择本地文件\n                        </span>\n                      </p>\n                    </div>\n                  </div>\n                </Modal>\n\n                <div className=\"files-container\">\n                  {fileNameArr.map((fileName, index) => (\n                    <div className=\"file-item-container\" key={index}>\n                      <Button\n                        type=\"default\"\n                        className=\"file-item\"\n                        key={`${index}-item`}\n                      >\n                        {fileName}\n                      </Button>\n                      <Button\n                        shape=\"circle\"\n                        type=\"default\"\n                        className=\"delete-button\"\n                        key={`${index}-delete`}\n                        onClick={() => {\n                          this.deleteFile(index);\n                        }}\n                      >\n                        <div>X</div>\n                      </Button>\n                    </div>\n                  ))}\n                </div>\n                <Divider />\n                <Button\n                  type=\"default\"\n                  onClick={() => {\n                    this.setState({ modalVisible: true });\n                  }}\n                  className=\"desktop-upload-button\"\n                >\n                  添加Excel\n                </Button>\n                <Button\n                  type=\"default\"\n                  onClick={() => {\n                    this.inputElement.click();\n                  }}\n                  className=\"mobile-upload-button\"\n                >\n                  添加Excel\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </Spin>\n      </div>\n    );\n  }\n}\n\nexport default Uploader;\n","const typeBHeader = [\n  \"序号\",\n  \"日期\",\n  \"报告接受时间\",\n  \"ID\",\n  \"姓名\",\n  \"性别\",\n  \"年龄\",\n  \"单位\",\n  \"联系方式\",\n  \"单位\",\n  \"部门\",\n  \"发现科室\",\n  \"阳性体征\",\n  \"家族史/既往史\",\n  \"重要异常结果报告人\",\n  \"通知时间\",\n  \"通知人\",\n  \"反馈结果\",\n  \"首次回访记录\",\n  \"回访人员\",\n  \"二次回访记录\",\n  \"回访人员\",\n];\n\nconst typeCHeader = [\n  \"序号\",\n  \"ID\",\n  \"姓名\",\n  \"性别\",\n  \"年龄\",\n  \"身份证号\",\n  \"联系方式\",\n  \"单位\",\n  \"部门\",\n  \"复诊主题\",\n  \"复诊描述\",\n  \"通知时间\",\n  \"通知人员\",\n];\n\nconst typeCHeaderValue = {\n  序号: \"序号\",\n  ID: \"ID\",\n  姓名: \"姓名\",\n  性别: \"性别\",\n  年龄: \"年龄\",\n  身份证号: \"身份证号\",\n  联系方式: \"联系方式\",\n  单位: \"单位\",\n  部门: \"部门\",\n  复诊主题: \"复诊主题\",\n  复诊描述: \"复诊描述\",\n  通知时间: \"通知时间\",\n  通知人员: \"通知人员\",\n};\n\nconst columns = [\n  {\n    title: \"序号\",\n    dataIndex: \"序号\",\n    key: \"序号\",\n  },\n  {\n    title: \"ID\",\n    dataIndex: \"ID\",\n    key: \"ID\",\n  },\n  {\n    title: \"姓名\",\n    dataIndex: \"姓名\",\n    key: \"姓名\",\n  },\n  {\n    title: \"性别\",\n    dataIndex: \"性别\",\n    key: \"性别\",\n  },\n  {\n    title: \"年龄\",\n    dataIndex: \"年龄\",\n    key: \"年龄\",\n  },\n  {\n    title: \"身份证号\",\n    dataIndex: \"身份证号\",\n    key: \"身份证号\",\n  },\n  {\n    title: \"联系方式\",\n    dataIndex: \"联系方式\",\n    key: \"联系方式\",\n  },\n  {\n    title: \"单位\",\n    dataIndex: \"单位\",\n    key: \"单位\",\n  },\n  {\n    title: \"部门\",\n    dataIndex: \"部门\",\n    key: \"部门\",\n  },\n  {\n    title: \"复诊主题\",\n    dataIndex: \"复诊主题\",\n    key: \"复诊主题\",\n  },\n  {\n    title: \"复诊描述\",\n    dataIndex: \"复诊描述\",\n    key: \"复诊描述\",\n  },\n  {\n    title: \"通知时间\",\n    dataIndex: \"通知时间\",\n    key: \"通知时间\",\n  },\n  {\n    title: \"通知人员\",\n    dataIndex: \"通知人员\",\n    key: \"通知人员\",\n  },\n];\n\nexport { typeBHeader, typeCHeader, typeCHeaderValue, columns };\n","import React, { useState } from \"react\";\nimport { Row, Col, Card, Button, Table } from \"antd\";\nimport XLSX from \"xlsx\";\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\nimport TopBar from \"./component/TopBar\";\nimport Uploader from \"./component/Uploader\";\nimport {\n  typeBHeader,\n  typeCHeader,\n  typeCHeaderValue,\n  columns,\n} from \"./constants\";\n\nfunction App() {\n  const [typeBArray, setTypeBArray] = useState([]);\n  const [typeCArray, setTypeCArray] = useState([]);\n  const [duplicate, setDuplicate] = useState([]);\n  const [nonDuplicate, setNonDuplicate] = useState([]);\n\n  const addTypeBItem = (item) => {\n    setTypeBArray([...typeBArray, item]);\n  };\n\n  const addTypeCItem = (item) => {\n    setTypeCArray([...typeCArray, item]);\n  };\n\n  const removeTypeBItem = (index) => {\n    const newTypeBArray = [...typeBArray];\n    typeBArray.splice(index, 1);\n    setTypeBArray(newTypeBArray);\n  };\n\n  const removeTypeCItem = (index) => {\n    const newTypeCArray = [...typeCArray];\n    typeCArray.splice(index, 1);\n    setTypeCArray(newTypeCArray);\n  };\n\n  const doFilter = () => {\n    const allTypeBItems = [];\n    typeBArray.forEach((data) => {\n      allTypeBItems.push(...data);\n    });\n    const allTypeCItems = typeCArray[0];\n    const allTypeBIds = allTypeBItems.map((item) => String(item.ID));\n    const duplicateC = (allTypeCItems || []).filter(\n      (cItem) =>\n        cItem.ID && cItem.ID !== \"ID\" && allTypeBIds.includes(String(cItem.ID))\n    );\n\n    const nonDuplicateC = (allTypeCItems || []).filter(\n      (cItem) =>\n        cItem.ID && cItem.ID !== \"ID\" && !allTypeBIds.includes(String(cItem.ID))\n    );\n\n    setDuplicate(duplicateC);\n    setNonDuplicate(nonDuplicateC);\n  };\n\n  const exportExcel = () => {\n    const data = [\n      { ID: \"重复项\" },\n      typeCHeaderValue,\n      ...duplicate,\n      { ID: \"\" },\n      { ID: \"非重复项\" },\n      typeCHeaderValue,\n      ...nonDuplicate,\n    ];\n\n    /* make the worksheet */\n    const ws = XLSX.utils.json_to_sheet(data);\n\n    /* add to workbook */\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, \"record\");\n\n    /* generate an XLSX file */\n    XLSX.writeFile(wb, \"结果.xlsx\");\n  };\n\n  return (\n    <div className=\"app\">\n      <TopBar />\n      <Row>\n        <Col xs={24} md={12}>\n          <Card\n            title={<div className=\"bold-card-title\">B类Excel</div>}\n            bordered={false}\n            className=\"card-container\"\n          >\n            点击或拖拽上传文件\n            <Uploader\n              maxItem={5}\n              addItem={addTypeBItem}\n              removeItem={removeTypeBItem}\n              header={typeBHeader}\n            />\n          </Card>\n        </Col>\n        <Col xs={24} md={12}>\n          <Card\n            title={<div className=\"bold-card-title\">C类Excel</div>}\n            bordered={false}\n            className=\"card-container\"\n          >\n            点击或拖拽上传文件\n            <Uploader\n              maxItem={1}\n              addItem={addTypeCItem}\n              removeItem={removeTypeCItem}\n              header={typeCHeader}\n            />\n          </Card>\n        </Col>\n        <Col xs={24}>\n          <Button\n            type=\"primary\"\n            className=\"trigger-button\"\n            size=\"large\"\n            onClick={doFilter}\n          >\n            进行筛查\n          </Button>\n        </Col>\n        {duplicate.length > 0 && (\n          <Col xs={24}>\n            <Card\n              title={<div className=\"bold-card-title\">重复项列表</div>}\n              bordered={false}\n              className=\"card-container\"\n            >\n              <Table dataSource={duplicate} columns={columns} />;\n            </Card>\n          </Col>\n        )}\n        {duplicate.length > 0 && (\n          <Col xs={24}>\n            <Button\n              type=\"primary\"\n              className=\"trigger-button\"\n              size=\"large\"\n              onClick={exportExcel}\n            >\n              导入Excel结果\n            </Button>\n          </Col>\n        )}\n      </Row>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}